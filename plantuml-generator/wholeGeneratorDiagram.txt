@startuml
abstract class GeneralMesh {
    +int WIDTH
    +int HEIGHT
    +DecimalFormat precision
}
Vertex "1..* \n +vertices \n +centroidList \n +vertexList" <--  GeneralMesh

Polygon "1..* \n +polygonList" <--  GeneralMesh

Segment "1..* \n +segments \n +segmentList \n +neighbourConnectionList" <-- GeneralMesh

class MeshGen {
    +int SQUARE_SIZE
    +Set<Integer> neighboursList

    +Mesh generate(String Mode)
    -void makeVertex()
    -void makePolygon(int v1Id,int v2Id,int v3Id,int v4Id)
    -void loadNeighbourRelations()
    -void colorVertex(Vertex vertex, int red, int green, int blue, int alpha)
    -void colorSegment(Segment seg, int red, int green, int blue, int alpha)
    -Color extractColor(List<Property> properties)
}

class IrregMeshGen {
    +Mesh generate(int numberPolygons)
    -void IrregularMesh(int numberPolygons)
    -VoronoiDiagramBuilder relaxation(VoronoiDiagramBuilder oldVoronoi)
    -void delaunayTriangulation(Geometry allPoly, List<List<Integer>> allPolygonSegments)
    -void constrainPoly(Geometry allPoly)
    -void loadCentroids(Geometry polygons)
    -void colorVertex(Vertex vertex, int red, int green, int blue, int alpha)
    -void colorSegment(Segment seg, int red, int green, int blue, int alpha)
}

class Main{
    +void main(String[] args)
}
MeshGen <--* Main
IrregMeshGen <--* Main


class Vertex {

}
class Segment {

}

class Polygon {

}
GeneralMesh <|-- MeshGen
GeneralMesh <|-- IrregMeshGen

@enduml

To run the plant thing do this:
java -jar plantuml.jar wholeGeneratorDiagram.txt
